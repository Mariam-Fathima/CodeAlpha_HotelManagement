import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;

public class HotelReservationSystem {

    private static Map<String, Room> rooms = new HashMap<>();
    private static Map<String, Reservation> reservations = new HashMap<>();
    private static int reservationIdCounter = 1;

    public static void main(String[] args) {
        initializeRooms();

        Scanner scanner = new Scanner(System.in);

        while (true) {
            System.out.println("\nMariam's Hotel Reservation System");
            System.out.println("Type 1 To Search For Available Rooms");
            System.out.println("Type 2 To Make a Reservation");
            System.out.println("Type 3 To View Booking Details");
            System.out.println("Type 4 To Exit");

            int choice = scanner.nextInt();

            switch (choice) {
                case 1:
                    searchAvailableRooms();
                    break;
                case 2:
                    makeReservation(scanner);
                    break;
                case 3:
                    viewBookingDetails(scanner);
                    break;
                case 4:
                    System.out.println("Thank you for using the Hotel Reservation System. Goodbye!");
                    scanner.close();
                    System.exit(0);
                default:
                    System.out.println("Invalid choice. Please choose a valid option.");
            }
        }
    }

    private static void initializeRooms() {
        rooms.put("101", new Room("101", "Single", 50.0));
        rooms.put("102", new Room("102", "Double", 75.0));
        rooms.put("103", new Room("103", "Suite", 100.0));
    }

    private static void searchAvailableRooms() {
        System.out.println("Available Rooms:");
        for (Room room : rooms.values()) {
            if (!room.isReserved()) {
                System.out.println(room);
            }
        }
    }

    private static void makeReservation(Scanner scanner) {
        System.out.print("Enter the room number to reserve: ");
        String roomNumber = scanner.next();

        Room selectedRoom = rooms.get(roomNumber);

        if (selectedRoom != null && !selectedRoom.isReserved()) {
            System.out.print("Enter your good name: ");
            String guestName = scanner.next();

            Reservation reservation = new Reservation(reservationIdCounter++, guestName, selectedRoom);
            reservations.put(String.valueOf(reservation.getReservationId()), reservation);

            selectedRoom.setReserved(true);

            System.out.println("Reservation successful. Your reservation ID is: " + reservation.getReservationId());
        } else {
            System.out.println("Invalid room number or the room is already reserved. Please try again.");
        }
    }

    private static void viewBookingDetails(Scanner scanner) {
        System.out.print("Enter your reservation ID: ");
        int reservationId = scanner.nextInt();

        Reservation reservation = reservations.get(Integer.toString(reservationId));

        if (reservation != null) {
            System.out.println("\nBooking Details:");
            System.out.println(reservation);
        } else {
            System.out.println("Invalid reservation ID. Please try again.");
        }
    }
}

class Room {
    private String number;
    private String type;
    private double price;
    private boolean reserved;

    public Room(String number, String type, double price) {
        this.number = number;
        this.type = type;
        this.price = price;
        this.reserved = false;
    }

    public String getNumber() {
        return number;
    }

    public String getType() {
        return type;
    }

    public double getPrice() {
        return price;
    }

    public boolean isReserved() {
        return reserved;
    }

    public void setReserved(boolean reserved) {
        this.reserved = reserved;
    }

    @Override
    public String toString() {
        return "Room " + number + " - " + type + " - $" + price + " per night";
    }
}

class Reservation {
    private int reservationId;
    private String guestName;
    private Room room;

    public Reservation(int reservationId, String guestName, Room room) {
        this.reservationId = reservationId;
        this.guestName = guestName;
        this.room = room;
    }

    public int getReservationId() {
        return reservationId;
    }

    public String getGuestName() {
        return guestName;
    }

    public Room getRoom() {
        return room;
    }

    @Override
    public String toString() {
        return "Reservation ID: " + reservationId +
                "\nGuest Name: " + guestName +
                "\nRoom: " + room +
                "\nTotal Price: $" + room.getPrice();
    }
}
